searchState.loadedDescShard("asydis_core", 0, "shared-display-core contains the core components of […\nAnother app was closed\nEvents from other apps that allow to alter a partition.\nA partition should have width divisible by 8.\nThe type of elements saved to the buffer - may differ from …\nThe type of elements saved to the buffer - may differ from …\nDisplay width must be divisible by both pixels as well as …\nA buffered <code>DrawTarget</code> that can be compressed and shared …\nAn RLE-encoded framebuffer.\nA partition of a <code>CompressableDisplay</code>.\nA decompressing Iterator for an RLE-encoded …\nA partition of a <code>SharableBufferedDisplay</code>.\nThings that might go wrong trying to envelope the area of …\nMaximum number of apps allowed on the screen concurrently.\nError Type for creating new screen partitions.\nEnveloping the adjacent app would not result in a proper …\nArea outside the parent display.\nOverlaps with existing partitions.\nAn error occured checking the new partition size\nA buffered <code>DrawTarget</code> that can be shared among multiple …\nCannot create partitions less than 8 pixels wide.\nThe passed in AppEvent was not an AppClosed event\nSize of the partition itself.\nSize of the partition itself.\nMutable access to the entire display’s buffer.\nThe compressed buffer that this partition controls.\nCalculate the buffer position of a <code>Point</code>.\nCalculate the buffer position of a <code>Point</code>.\nChecks whether the buffer still encodes as many elements …\nEmpties the buffer and refill it with a new value.\nIncrease this partition’s size.\nIncrease this partition’s size from an AppClosed event.\nFlushes a given chunk. Called once per chunk for every …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProvide mutable access to the buffer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecify how <code>Color</code> maps to  <code>BufferElement</code>.\nSpecify how <code>Color</code> maps to  <code>BufferElement</code>.\nCreates a new partition.\nCreates a new partition.\nCreates a new compressed buffer with a start value.\nCreates a new decompressing iterator from a vector of runs.\nSize of the parent display.\nSize of the parent display.\nRequest to flush this partition.\nRequest to flush this partition.\nSplits the partition into two new partitions.")