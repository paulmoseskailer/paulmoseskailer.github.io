searchState.loadedDescShard("shared_display", 0, "Provides an abstraction layer over embedded-graphics, …\nAbort the loop (e.g. when the simulator window was closed)\nThe entire screen.\nAnother app was closed\nEvents from other apps that allow to alter a partition.\nArea of the screen that has been drawn to since the last …\nA partition should have width divisible by 8.\nThe type of elements saved to the buffer - may differ from …\nDisplay width must be divisible by both pixels as well as …\nA <code>SharableBufferedDisplay</code> that can compressed.\nAn RLE-encoded framebuffer.\nA partition of a <code>CompressableDisplay</code>.\nContinue flushing\nA decompressing Iterator for an RLE-encoded …\nA partition of a <code>SharableBufferedDisplay</code>.\nAn object to track the <code>AreaToFlush</code> in a concurrent …\nEvent queue for all apps to access.\nThings that might go wrong trying to envelope the area of …\nInterval between to flushes.\nA lock to avoid writes to the buffer during decompression …\nWhether to continue flushing or not.\nMaximum number of apps allowed on the screen concurrently.\nError Type for creating new screen partitions.\nNothing.\nEnveloping the adjacent app would not result in a proper …\nArea outside the parent display.\nOverlaps with existing partitions.\nAn error occured checking the new partition size\nA buffered <code>DrawTarget</code> that can be shared among multiple …\nShared Display with integrated RLE-compression.\nShared Display.\nPart of the screen.\nCannot create partitions less than 8 pixels wide.\nThe passed in AppEvent was not an AppClosed event\nSize of the partition itself.\nSize of the partition itself.\nMutable access to the entire display’s buffer.\nCalculate the buffer position of a <code>Point</code>.\nChecks whether the buffer still encodes as many elements …\nEmpties the buffer and refill it with a new value.\nThe area that has been drawn to, protected by a mutex.\nDrops the original buffer if one exists. …\nIncrease this partition’s size.\nIncrease this partition’s size from an AppClosed event.\nFlushes a given chunk. Called once per chunk for every …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProvide mutable access to the buffer.\nProvide a raw pointer to the compressed buffer.\nReturns a raw pointer to the inner buffer.\nIncrease the area’s size.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLaunches an app from inside another app.\nLaunches a new app in an area of the screen.\nLaunches a new app in an area of the screen.\nLaunches a new app that can launch other apps in an area …\nSpecify how <code>Color</code> maps to  <code>BufferElement</code>.\nCreates a new partition.\nCreates a new draw tracker.\nCreates a new Shared Display from a real display.\nCreates a new partition.\nCreates a new Shared Compressed Display from a real …\nCreates a new lock.\nCreates a new compressed buffer with a start value.\nCreates a new decompressing iterator from a vector of runs.\nReturn a new <code>DisplayPartition</code> of the display.\nSize of the parent display.\nSize of the parent display.\nEnsures no writes are in progress before flushing.\nEnsures no flush is in progress before writing.\nThe actual display, locked with mutex\nThe actual display, protected by a mutex.\nRuns a given flush function in a loop.\nRuns the flush loop, additionally calling the passed in …\nSplits the partition into two new partitions.\nReturns the area that has been drawn to safely.")